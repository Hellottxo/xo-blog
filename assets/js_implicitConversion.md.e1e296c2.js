import{_ as n,o as s,c as a,a as p}from"./app.c43dc0b4.js";const g='{"title":"\u9690\u5F0F\u8F6C\u6362","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u5E38\u89C1\u7684\u53D1\u751F\u9690\u5F0F\u8F6C\u6362\u7684\u573A\u666F","slug":"\u5E38\u89C1\u7684\u53D1\u751F\u9690\u5F0F\u8F6C\u6362\u7684\u573A\u666F"},{"level":2,"title":"\u5E38\u89C1\u7684\u8F6C\u6362\u89C4\u5219","slug":"\u5E38\u89C1\u7684\u8F6C\u6362\u89C4\u5219"},{"level":3,"title":"1. (+) \u8FD0\u7B97\u7B26","slug":"_1-\u8FD0\u7B97\u7B26"},{"level":3,"title":"2. (-) (/) (*) \u8FD0\u7B97\u7B26\u3001(>) (=) (<=)\u6BD4\u8F83\u7B26","slug":"_2-\u8FD0\u7B97\u7B26\u3001-\u6BD4\u8F83\u7B26"},{"level":3,"title":"3. (==) \u8FD0\u7B97\u7B26","slug":"_3-\u8FD0\u7B97\u7B26"},{"level":3,"title":"5. (||) (&&)\u903B\u8F91\u8FD0\u7B97\u7B26","slug":"_5-\u903B\u8F91\u8FD0\u7B97\u7B26"},{"level":3,"title":"4. if(...) / while(...)\u6761\u4EF6\u8BED\u53E5","slug":"_4-if-while-\u6761\u4EF6\u8BED\u53E5"},{"level":2,"title":"\u5982\u4F55\u907F\u514D\u6216\u5DE7\u5999\u5229\u7528","slug":"\u5982\u4F55\u907F\u514D\u6216\u5DE7\u5999\u5229\u7528"},{"level":3,"title":"\u907F\u514D\uFF1A","slug":"\u907F\u514D\uFF1A"},{"level":3,"title":"\u5DE7\u5999\u5229\u7528\uFF1A","slug":"\u5DE7\u5999\u5229\u7528\uFF1A"}],"relativePath":"js/implicitConversion.md","lastUpdated":1645672724000}',t={},e=p(`<h1 id="\u9690\u5F0F\u8F6C\u6362" tabindex="-1">\u9690\u5F0F\u8F6C\u6362 <a class="header-anchor" href="#\u9690\u5F0F\u8F6C\u6362" aria-hidden="true">#</a></h1><h2 id="\u5E38\u89C1\u7684\u53D1\u751F\u9690\u5F0F\u8F6C\u6362\u7684\u573A\u666F" tabindex="-1">\u5E38\u89C1\u7684\u53D1\u751F\u9690\u5F0F\u8F6C\u6362\u7684\u573A\u666F <a class="header-anchor" href="#\u5E38\u89C1\u7684\u53D1\u751F\u9690\u5F0F\u8F6C\u6362\u7684\u573A\u666F" aria-hidden="true">#</a></h2><ol><li>\u4F7F\u7528\u8FD0\u7B97\u7B26\u65F6\uFF0C\u5982(+)/(==)\u8FD0\u7B97\u7B26\u7B49\u7B49</li><li>if(...) / while(...)\u6761\u4EF6\u8BED\u53E5\u4E2D</li></ol><h2 id="\u5E38\u89C1\u7684\u8F6C\u6362\u89C4\u5219" tabindex="-1">\u5E38\u89C1\u7684\u8F6C\u6362\u89C4\u5219 <a class="header-anchor" href="#\u5E38\u89C1\u7684\u8F6C\u6362\u89C4\u5219" aria-hidden="true">#</a></h2><h3 id="_1-\u8FD0\u7B97\u7B26" tabindex="-1">1. (+) \u8FD0\u7B97\u7B26 <a class="header-anchor" href="#_1-\u8FD0\u7B97\u7B26" aria-hidden="true">#</a></h3><p><strong>(+) \u8FD0\u7B97\u7B26\u57FA\u672C\u8F6C\u6362\u89C4\u5219\u5982\u4E0B</strong>\uFF1A</p><ol><li>Number + String -&gt; Number.toString() + String</li><li>Object/Array/Boolean + String -&gt; (Object/Array/Boolean).toString() + String</li><li>Number + Object/Array -&gt; Number + Number((Object/Array).toString())</li><li>+ any -&gt; + Number(any.toString())</li><li>{} + any -&gt; + any</li></ol><div class="language-js"><pre><code><span class="token operator">+</span> <span class="token string">&#39;1&#39;</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">+</span> <span class="token number">1</span>
<span class="token number">1</span> <span class="token operator">+</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">+</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token number">1</span> <span class="token operator">+</span> <span class="token keyword">null</span>
</code></pre></div><details><summary>\u70B9\u51FB\u67E5\u770B\u7B54\u6848</summary><div class="language-js"><pre><code><span class="token operator">+</span> <span class="token string">&#39;1&#39;</span> <span class="token comment">// 1</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token comment">// 1</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token comment">// 1</span>
<span class="token number">1</span> <span class="token operator">+</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// &#39;1[object Object]&#39;</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">+</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// &#39;[object Object][object Object]&#39;</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// NaN</span>
<span class="token number">1</span> <span class="token operator">+</span> <span class="token keyword">null</span> <span class="token comment">// 1</span>
</code></pre></div></details><h3 id="_2-\u8FD0\u7B97\u7B26\u3001-\u6BD4\u8F83\u7B26" tabindex="-1">2. (-) (/) (*) \u8FD0\u7B97\u7B26\u3001(&gt;) (&lt;) (&gt;=) (&lt;=)\u6BD4\u8F83\u7B26 <a class="header-anchor" href="#_2-\u8FD0\u7B97\u7B26\u3001-\u6BD4\u8F83\u7B26" aria-hidden="true">#</a></h3><p><strong>(-) \u8FD0\u7B97\u7B26\u57FA\u672C\u8F6C\u6362\u89C4\u5219\u5982\u4E0B</strong>\uFF1A</p><ol><li>Number - Object/Array/Boolean -&gt; Number - Number((Object/Array/Boolean.toString()))</li><li>Number - String -&gt; Number - Number(String)</li><li>- any -&gt; - Number(any.toString())</li><li>{} - any -&gt; - any</li></ol><div class="language-js"><pre><code><span class="token operator">-</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">;</span>
<span class="token string">&quot;222&quot;</span> <span class="token operator">-</span> <span class="token string">&quot;111&quot;</span><span class="token punctuation">;</span>
<span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">{</span>
<span class="token punctuation">}</span>
<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token number">1</span> <span class="token operator">-</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token boolean">false</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token number">1</span> <span class="token operator">-</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token number">1</span> <span class="token operator">-</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
</code></pre></div><details><summary>\u70B9\u51FB\u67E5\u770B\u7B54\u6848</summary><div class="language-js"><pre><code><span class="token operator">-</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">;</span> <span class="token comment">// -1</span>
<span class="token string">&quot;222&quot;</span> <span class="token operator">-</span> <span class="token string">&quot;111&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 111</span>
<span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token punctuation">{</span>
<span class="token punctuation">}</span>
<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// -1</span>
<span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
<span class="token number">1</span> <span class="token operator">-</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
<span class="token boolean">false</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// -1</span>
<span class="token number">1</span> <span class="token operator">-</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token number">1</span> <span class="token operator">-</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
</code></pre></div></details><p>\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C/\u3001_ \u3001&gt; \u3001&lt; \u3001&gt;= \u3001&lt;= \u4FDD\u6301\u4E0E(-)\u89C4\u5F8B\u4E00\u81F4\uFF0C\u4F46/\u3001_ \u3001&gt; \u3001&lt; \u3001&gt;= \u3001&lt;= \u7684\u4F7F\u7528\u9700\u8981\u6EE1\u8DB3\u4E24\u8FB9\u540C\u65F6\u6709\u53C2\u6570\uFF0C\u5426\u5219\u5C31\u4F1A\u62A5\u9519\uFF1A</p><div class="language-js"><pre><code><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">*</span> <span class="token number">1</span>
<span class="token comment">// Uncaught SyntaxError: Unexpected token &#39;*&#39;</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">&gt;</span> <span class="token number">1</span>
<span class="token comment">// Uncaught SyntaxError: Unexpected token &#39;&gt;&#39;</span>
</code></pre></div><h3 id="_3-\u8FD0\u7B97\u7B26" tabindex="-1">3. (==) \u8FD0\u7B97\u7B26 <a class="header-anchor" href="#_3-\u8FD0\u7B97\u7B26" aria-hidden="true">#</a></h3><p><strong>(==) \u8FD0\u7B97\u7B26\u57FA\u672C\u8F6C\u6362\u89C4\u5219\u5982\u4E0B</strong>\uFF1A</p><ol><li>Number == otherType -&gt; Number == Number(otherType)</li><li>otherType == Boolean -&gt; otherType == Number(Boolean)</li></ol><div class="language-js"><pre><code><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">false</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;&#39;</span>
<span class="token string">&#39;0&#39;</span> <span class="token operator">==</span> <span class="token number">0</span>
<span class="token string">&#39;0&#39;</span> <span class="token operator">==</span> <span class="token boolean">false</span>
<span class="token keyword">null</span> <span class="token operator">==</span> <span class="token boolean">false</span>
<span class="token keyword">undefined</span> <span class="token operator">==</span> <span class="token boolean">false</span>
<span class="token keyword">null</span> <span class="token operator">==</span> <span class="token keyword">undefined</span>
</code></pre></div><details><summary>\u70B9\u51FB\u67E5\u770B\u7B54\u6848</summary><div class="language-js"><pre><code><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token comment">// true</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// false</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;&#39;</span> <span class="token comment">// true</span>
<span class="token string">&#39;0&#39;</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token comment">// true</span>
<span class="token string">&#39;0&#39;</span> <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token comment">// true</span>
<span class="token keyword">null</span> <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token comment">// false</span>
<span class="token keyword">undefined</span> <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token comment">// false</span>
<span class="token keyword">null</span> <span class="token operator">==</span> <span class="token keyword">undefined</span> <span class="token comment">// true</span>
</code></pre></div></details><p>\u90A3\u4E48<code>[] == ![]</code>\u662F<code>true</code>\u8FD8\u662F<code>false</code>\u5462\uFF1F</p><details><summary>\u70B9\u51FB\u67E5\u770B\u7B54\u6848</summary><div class="language-js"><pre><code><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token comment">// \uFF01\u8FD0\u7B97\u7B26\u4F18\u5148\u7EA7\u9AD8\u4E8E ==\uFF0C\u6240\u4EE5 [] == ![] -&gt; [] == false</span>
</code></pre></div></details><h3 id="_5-\u903B\u8F91\u8FD0\u7B97\u7B26" tabindex="-1">5. (||) (&amp;&amp;)\u903B\u8F91\u8FD0\u7B97\u7B26 <a class="header-anchor" href="#_5-\u903B\u8F91\u8FD0\u7B97\u7B26" aria-hidden="true">#</a></h3><p><strong>\u903B\u8F91\u8FD0\u7B97\u7B26\u57FA\u672C\u8F6C\u6362\u89C4\u5219\u5982\u4E0B</strong>\uFF1A</p><ol><li>baseType &amp;&amp;/|| baseType -&gt; Boolean(baseType) &amp;&amp;/|| Boolean(baseType)</li><li>referenceType &amp;&amp;/|| referenceType -&gt; Boolean(referenceType.toString()) &amp;&amp;/|| Boolean(referenceType.toString())</li></ol><p>\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF1A\u903B\u8F91\u8FD0\u7B97\u7B26\u867D\u7136\u5728\u6BD4\u8F83\u8FC7\u7A0B\u4E2D\u5C06\u53C2\u6570\u8F6C\u6362\u4E3A\u4E86<code>boolean</code>\uFF0C\u4F46\u8FD4\u56DE\u7684\u7ED3\u679C\u4ECD\u662F\u539F\u53C2\u6570\u3002</p><div class="language-js"><pre><code><span class="token number">0</span> <span class="token operator">||</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
<span class="token string">&quot;11&quot;</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// &#39;11&#39;</span>
<span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
<span class="token string">&quot;11&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// &#39;11&#39;</span>
</code></pre></div><h3 id="_4-if-while-\u6761\u4EF6\u8BED\u53E5" tabindex="-1">4. if(...) / while(...)\u6761\u4EF6\u8BED\u53E5 <a class="header-anchor" href="#_4-if-while-\u6761\u4EF6\u8BED\u53E5" aria-hidden="true">#</a></h3><p><strong>if(...) / while(...)\u6761\u4EF6\u8BED\u53E5\u4E2D\u57FA\u672C\u8F6C\u6362\u89C4\u5219\u5982\u4E0B</strong>\uFF1A</p><ol><li>baseType -&gt; Boolean(baseType)</li><li>referenceType -&gt; Boolean(referenceType.toString())</li></ol><h2 id="\u5982\u4F55\u907F\u514D\u6216\u5DE7\u5999\u5229\u7528" tabindex="-1">\u5982\u4F55\u907F\u514D\u6216\u5DE7\u5999\u5229\u7528 <a class="header-anchor" href="#\u5982\u4F55\u907F\u514D\u6216\u5DE7\u5999\u5229\u7528" aria-hidden="true">#</a></h2><h3 id="\u907F\u514D\uFF1A" tabindex="-1">\u907F\u514D\uFF1A <a class="header-anchor" href="#\u907F\u514D\uFF1A" aria-hidden="true">#</a></h3><ol><li>\u4F7F\u7528\u76F8\u7B49\u8FD0\u7B97\u7B26\u65F6\uFF0C\u5C3D\u91CF\u4F7F\u7528\u4E25\u683C\u76F8\u7B49(===)</li><li>\u4F7F\u7528\u7C7B\u578B\u68C0\u67E5</li></ol><h3 id="\u5DE7\u5999\u5229\u7528\uFF1A" tabindex="-1">\u5DE7\u5999\u5229\u7528\uFF1A <a class="header-anchor" href="#\u5DE7\u5999\u5229\u7528\uFF1A" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token string">&#39;&#39;</span> <span class="token operator">=</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span>

<span class="token keyword">const</span> res <span class="token operator">=</span> obj<span class="token punctuation">.</span>name <span class="token operator">?</span> obj<span class="token punctuation">.</span>name <span class="token operator">:</span> <span class="token string">&#39;test&#39;</span> <span class="token operator">-</span><span class="token operator">&gt;</span> obj<span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token string">&#39;test&#39;</span>

<span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> a<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  a <span class="token operator">=</span> map<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token operator">-</span><span class="token operator">&gt;</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> map <span class="token operator">&amp;&amp;</span> map<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
</code></pre></div>`,36),o=[e];function c(l,r,u,k,i,m){return s(),a("div",null,o)}var b=n(t,[["render",c]]);export{g as __pageData,b as default};
