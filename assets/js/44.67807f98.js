(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{429:function(v,e,_){"use strict";_.r(e);var t=_(33),a=Object(t.a)({},(function(){var v=this,e=v.$createElement,_=v._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"react和vue的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#react和vue的区别"}},[v._v("#")]),v._v(" React和Vue的区别")]),v._v(" "),_("h3",{attrs:{id:"相似之处"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#相似之处"}},[v._v("#")]),v._v(" 相似之处")]),v._v(" "),_("ol",[_("li",[v._v("都使用Virtual DOM")]),v._v(" "),_("li",[v._v("都提供了响应式和组件化的视图组件")]),v._v(" "),_("li",[v._v("都将注意力集中保持在核心库，而其他功能如路由和全局状态管理交给相关的库")])]),v._v(" "),_("h3",{attrs:{id:"区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[v._v("#")]),v._v(" 区别")]),v._v(" "),_("ol",[_("li",[v._v("React使用JSX渲染组件，Vue则主要使用template模版，Vue的模版中的修饰符，如"),_("code",[v._v("v-on")]),v._v("，在JSX中实现，需要更多的代码")]),v._v(" "),_("li",[v._v("Vue的单文件组件形式，支持在同一个文件里控制css")]),v._v(" "),_("li",[v._v("Vue官方提供了状态管理解决方案Vuex，而React的状态管理模式依托于社区维护")]),v._v(" "),_("li",[v._v("Vue的更新粒度是组件级的，而React中某个组件状态发生变化时，会以该组件为根，重新渲染整个组件子树。")]),v._v(" "),_("li",[v._v("Vue的响应式")])]),v._v(" "),_("h2",{attrs:{id:"为什么要使用virtual-dom"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用virtual-dom"}},[v._v("#")]),v._v(" 为什么要使用Virtual DOM")]),v._v(" "),_("ol",[_("li",[v._v("通过模拟DOM结构，达到批量更新的效果，减少不必要的DOM操作，节约性能")]),v._v(" "),_("li",[v._v("支持跨平台开发")])]),v._v(" "),_("h2",{attrs:{id:"自检清单"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#自检清单"}},[v._v("#")]),v._v(" 自检清单")]),v._v(" "),_("h3",{attrs:{id:"vue"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[v._v("#")]),v._v(" Vue")]),v._v(" "),_("ol",[_("li",[v._v("什么是MVVM？\n"),_("details",[_("summary",[v._v("点击查看答案")])])])]),v._v(" "),_("p",[v._v("MVVM是model-view-viewmodel的缩写，是前端的一种架构模式。view层和model层通过viewmodel层进行通信。\n在view层中进行dom操作导致数据发生变化时，viewmodel响应操作并将数据同步到model层；model层数据发生变化时，view层的数据也会发生相应的变化。")]),v._v(" "),v._v("\n2. Vue框架的优点是什么？\n"),_("details",[_("summary",[v._v("点击查看答案")]),v._v(" "),_("ol",[_("li",[v._v("响应式")]),v._v(" "),_("li",[v._v("易于上手")]),v._v(" "),_("li",[v._v("单文件组件")]),v._v(" "),_("li",[v._v("支持跨平台\n...")])])]),v._v("\n3. 讲述一下Vue的生命周期\n4. Vue组件之间是怎么传值的\n"),_("details",[_("summary",[v._v("点击查看答案")]),v._v(" "),_("p",[v._v("父子组件：")]),v._v(" "),_("ol",[_("li",[v._v("通过props传值")]),v._v(" "),_("li",[v._v("$emit/$on")]),v._v(" "),_("li",[v._v("通过"),_("code",[v._v("provide/inject")]),v._v("依赖注入")])]),v._v(" "),_("p",[v._v("兄弟组件：")]),v._v(" "),_("ol",[_("li",[v._v("eventbus")]),v._v(" "),_("li",[v._v("vuex")])])]),v._v(" "),_("ol",{attrs:{start:"5"}},[_("li",[v._v("为什么Vue中的data必须是一个函数\n"),_("details",[_("summary",[v._v("点击查看答案")])])])]),v._v(" "),_("p",[v._v("并不是必须的，根组件的中的data就为对象。\n只有当组件是可复用的 Vue 实例时，data必须为函数。\n组件为可复用的Vuew实例时，data如果为对象，组件内对data内数据的改动会相互影响。")]),v._v(" "),v._v("\n6. v-if和v-show的区别\n"),_("details",[_("summary",[v._v("点击查看答案")]),v._v(" "),_("p",[_("code",[v._v("v-if")]),v._v("根据条件决定是否渲染\n"),_("code",[v._v("v-show")]),v._v("则是根据条件切换"),_("code",[v._v("display: none")])]),v._v(" "),_("p",[_("code",[v._v("v-if")]),v._v("有更高的切换开销，而"),_("code",[v._v("v-show")]),v._v("有更高的初始渲染开销。\n因此，内容频繁切换的情况使用"),_("code",[v._v("v-show")]),v._v("，条件改变较少时使用"),_("code",[v._v("v-if")]),v._v("。")])]),v._v("\n7. computed和watch的区别\n"),_("details",[_("summary",[v._v("点击查看答案")]),v._v(" "),_("ol",[_("li",[v._v("使用场景上："),_("code",[v._v("computed")]),v._v("是计算属性，适用于有多个依赖的情况；而"),_("code",[v._v("watch")]),v._v("则是侦听属性，负责响应某项数据的变动。")]),v._v(" "),_("li",[v._v("使用方式上："),_("code",[v._v("computed")]),v._v("和"),_("code",[v._v("watch")]),v._v("都可以在Vue实例中作为属性使用，除此之外，"),_("code",[v._v("watch")]),v._v("还支持命令式调用"),_("code",[v._v("vm.$watch")]),v._v("。")])]),v._v(" "),_("p",[_("code",[v._v("vm.$watch(expOfFn, cb, option)")]),v._v("支持传入三个参数，最后一个参数中有两个属性：imddiate、deep。其中immediate表示将以当前expOfFn值执行一次回调函数，deep表示监听对象内部属性的变动。\n"),_("code",[v._v("vm.$watch")]),v._v(" return一个取消观察的函数，可以通过执行这个函数，停止触发回调。")])]),v._v("\n8. Vue.nextTick的作用\n"),_("details",[_("summary",[v._v("点击查看答案")]),v._v(" "),_("p",[v._v("为了避免不必要的计算和渲染，Vue的数据是异步更新的，"),_("code",[v._v("Vue.nextTick")]),v._v("支持在DOM更新后立即获取到更新后的DOM。比如在created中，对DOM的操作需要放入"),_("code",[v._v("Vue.nextTick")]),v._v("中，没有提供callback时，"),_("code",[v._v("Vue.nextTick")]),v._v("返回一个promise对象。")]),v._v(" "),_("p",[v._v("原理，从事件循环的角度讲。\n")])]),v._v("\n9. v-for中key的作用\n"),_("details",[_("summary",[v._v("点击查看答案")]),_("p"),v._v(" "),_("p",[v._v("Vue组件的node diff，会通过key及其他参数来对比是否同一个节点，当新旧节点为同一个节点时，会复用旧节点以此节约性能。")])]),v._v("\n10. Vue中双向绑定的原理\n11. 如何动态更新对象或数组的值\n"),_("details",[_("summary",[v._v("点击查看答案")]),v._v(" "),_("p",[v._v("对象：1. 通过扩展运算符修改对象值、Object.assign 2. Vue.set\n数组：1. splice、push、unshift")])]),v._v("\n12. 说说常用的事件修饰符\n"),_("details",[_("summary",[v._v("点击查看答案")]),v._v("\n- .stop\n- .prevent\n- .capture\n- .self\n- .once\n- .passive\n")]),v._v("\n13. Vue 如何获取 DOM 元素\n"),_("summary",[v._v("点击查看答案")]),v._v("\nvm.$el\n"),v._v("\n14. v-on 如何绑定多个事件\n"),_("details",[_("summary",[v._v("点击查看答案")]),v._v("\n逗号分割\n")]),v._v("\n15. Vue 初始化页面闪动问题如何解决\n16. Vue 如何清除浏览器缓存\n17. Vue-router 路由有哪些模式\n"),_("details",[_("summary",[v._v("点击查看答案")]),v._v("\n1. hash模式: window.location.hash\n2. history模式: histor.pushState\n")]),v._v("\n### Vuex\n1. Vuex 是什么？有哪几种属性？什么时候使用？\n"),_("details",[_("summary",[v._v("点击查看答案")]),v._v(" "),_("p",[_("code",[v._v("Vuex")]),v._v("的官网上将它描述为一种 "),_("strong",[v._v("状态管理模式")]),v._v(" 。它采用集中式存储管理应用的所有组件的状态。")]),v._v(" "),_("p",[v._v("其核心属性有："),_("code",[v._v("state")]),v._v("、"),_("code",[v._v("getter")]),v._v("、"),_("code",[v._v("mutation")]),v._v("、"),_("code",[v._v("action")]),v._v("、"),_("code",[v._v("module")]),v._v("。")]),v._v(" "),_("p",[v._v("使用场景：\n多个组件需要依赖或修改同一个状态时")])])])}),[],!1,null,null,null);e.default=a.exports}}]);