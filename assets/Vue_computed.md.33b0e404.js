import{_ as n,o as s,c as a,a as t}from"./app.c43dc0b4.js";var p="/xo-blog/assets/reactive.97468a50.png";const w='{"title":"\u4ECE\u6E90\u7801\u770B watch \u548C computed","description":"","frontmatter":{},"headers":[{"level":2,"title":"Vue \u7684\u54CD\u5E94\u5F0F\u6D41\u7A0B","slug":"vue-\u7684\u54CD\u5E94\u5F0F\u6D41\u7A0B"},{"level":3,"title":"observer","slug":"observer"},{"level":3,"title":"dep","slug":"dep"},{"level":3,"title":"watcher","slug":"watcher"},{"level":2,"title":"watch/computed","slug":"watch-computed"},{"level":3,"title":"renderWatcher","slug":"renderwatcher"},{"level":3,"title":"computedWatcher","slug":"computedwatcher"}],"relativePath":"Vue/computed.md","lastUpdated":1645672724000}',o={},e=t(`<h1 id="\u4ECE\u6E90\u7801\u770B-watch-\u548C-computed" tabindex="-1">\u4ECE\u6E90\u7801\u770B watch \u548C computed <a class="header-anchor" href="#\u4ECE\u6E90\u7801\u770B-watch-\u548C-computed" aria-hidden="true">#</a></h1><pre><code>Vue2 \u7248\u672C\uFF1A2.6.11
</code></pre><h2 id="vue-\u7684\u54CD\u5E94\u5F0F\u6D41\u7A0B" tabindex="-1">Vue \u7684\u54CD\u5E94\u5F0F\u6D41\u7A0B <a class="header-anchor" href="#vue-\u7684\u54CD\u5E94\u5F0F\u6D41\u7A0B" aria-hidden="true">#</a></h2><p>\u4E86\u89E3<code>computed</code>\u548C<code>watch</code>\u4E4B\u524D\uFF0C\u8BA9\u6211\u4EEC\u5148\u4E86\u89E3\u4E00\u4E0B Vue \u7684\u54CD\u5E94\u5F0F\u3002</p><p>\u8BDD\u4E0D\u591A\u8BF4\uFF0C\u5148\u4E0A\u56FE\uFF1A <img src="`+p+`" alt=""></p><p>\u6574\u4E2A\u54CD\u5E94\u5F0F\u7684\u5B9E\u73B0\u5927\u81F4\u5982\u4E0B\uFF1A</p><ol><li><code>observe</code>\u5C06<code>data</code>\u5305\u88F9\u4E3A\u54CD\u5E94\u5F0F\u6570\u636E\uFF0C\u5E76\u901A\u8FC7<code>dep</code>\u5B58\u653E\u4F9D\u8D56</li><li><code>render</code>\u65F6\u4F1A<code>new</code>\u4E00\u4E2A<code>watcher</code>\u6765\u8BA2\u9605\u6570\u636E\u7684\u6539\u53D8</li><li><code>wacher</code>\u7684\u6784\u9020\u51FD\u6570\u4F1A\u5BF9\u88AB\u89C2\u6D4B\u7684\u6570\u636E\u6267\u884C<code>getter</code>\uFF0C\u5C06<code>watcher</code>\u6536\u96C6\u5230<code>dep</code>\u4E2D</li><li>\u6570\u636E\u53D1\u751F\u6539\u53D8\u65F6\uFF0C\u901A\u8FC7<code>setter</code>\u4E2D\u7684<code>dep.notify()</code>\u901A\u77E5\u5230\u5404\u4E2A<code>watcher</code></li><li><code>watcher</code>\u6267\u884C<code>update</code>\uFF0C\u5C06\u53D8\u5316\u66F4\u65B0\u5230\u9875\u9762</li></ol><p>\uFF08\u6CE8\uFF1A\u4E3A\u4E86\u66F4\u597D\u7684\u7406\u89E3\uFF0C\u4E0B\u6587\u7684\u4EE3\u7801\u76F8\u8F83\u4E8E\u6E90\u7801\uFF0C\u6709\u6240\u6539\u52A8\u6216\u7B80\u5316\uFF09</p><h3 id="observer" tabindex="-1">observer <a class="header-anchor" href="#observer" aria-hidden="true">#</a></h3><p>Vue \u521D\u59CB\u5316\u8FC7\u7A0B\u4E2D\uFF0C\u5728<code>beforeCreate</code>-&gt;<code>created</code>\u8FC7\u7A0B\u4E2D\uFF0C\u4F1A\u6267\u884C<code>initData</code>\u5C06<code>data</code>\u4E2D\u7684\u6570\u636E\u521D\u59CB\u5316\u4E3A\u54CD\u5E94\u5F0F\u6570\u636E\u3002\u800C<code>initData</code>\u7684\u6838\u5FC3\u5C31\u662F<code>observer</code>\uFF0C<code>observer</code>\u4E2D\u7684<code>defineReactive()</code>\u5229\u7528<code>Object.defineProperty()</code>\u8FDB\u884C\u6570\u636E\u52AB\u6301\u3002</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">defineReactive</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u62A5\u544A\uFF01\u6570\u636E\u88AB\u8BFB\u53D6\u4E86\uFF01</span>
      <span class="token keyword">return</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">set</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal <span class="token operator">===</span> val<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token comment">//\u62A5\u544A\uFF01\u6570\u636E\u6539\u53D8\u4E86\uFF01\u505A\u4E00\u4E9B\u6570\u636E\u6539\u53D8\u8BE5\u505A\u7684\u4E8B\u60C5</span>
      val <span class="token operator">=</span> newVal<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="dep" tabindex="-1">dep <a class="header-anchor" href="#dep" aria-hidden="true">#</a></h3><p>\u54CD\u5E94\u5F0F\u6570\u636E\u6709\u4E86\uFF0C\u90A3\u4E48\u6570\u636E\u53D1\u751F\u53D8\u52A8\uFF0C\u5E94\u8BE5\u901A\u77E5\u8C01\u5462\uFF1F \u663E\u7136\uFF0CVue \u4F7F\u7528\u4E86\u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F\uFF0C\u6570\u636E\u53D1\u751F\u6539\u53D8\uFF0C\u81EA\u7136\u662F\u901A\u77E5\u8BA2\u9605\u8005\u3002\u4F46\u5F80\u5F80\u4E00\u4E2A\u6570\u636E\u7684\u6539\u53D8\uFF0C\u4E0D\u6B62\u4E00\u4E2A\u8BA2\u9605\u8005\uFF0C\u90A3\u4E48\u6211\u4EEC\u5982\u4F55\u786E\u4FDD\u6BCF\u4E2A\u8BA2\u9605\u8005\u90FD\u80FD\u6536\u5230\u901A\u77E5\u5462\uFF1F \u94DB\u94DB\u94DB\uFF01<code>dep</code>\u95EA\u4EAE\u767B\u573A\uFF01\u524D\u9762\u8BF4\u5230\uFF0C<code>defineReactive()</code>\u4F1A\u5C06\u6570\u636E\u53D8\u6210\u54CD\u5E94\u5F0F\uFF0C\u800C\u5728\u8FD9\u4E2A\u8FC7\u7A0B\u4E2D\uFF0C\u6211\u4EEC\u5229\u7528\u95ED\u5305\u539F\u7406\uFF0C\u4E3A\u6BCF\u4E2A\u6570\u636E\u521B\u5EFA\u4E00\u4E2A\u4ED3\u5E93\uFF0C\u4E13\u95E8\u7528\u6765\u653E\u7F6E\u8FD9\u4E2A\u6570\u636E\u7684\u8BA2\u9605\u8005\u3002</p><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">Dep</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6211\u662F\u4E00\u4E2A\u65E0\u60C5\u7684\u4F9D\u8D56\u6536\u96C6\u5668</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>subs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">defineReactive</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u62A5\u544A\uFF01\u6570\u636E\u88AB\u8BFB\u53D6\u4E86\uFF01</span>
      <span class="token keyword">return</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">set</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal <span class="token operator">===</span> val<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
      dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u62A5\u544A\uFF01\u6570\u636E\u6539\u53D8\u4E86\uFF01\u505A\u4E00\u4E9B\u6570\u636E\u6539\u53D8\u8BE5\u505A\u7684\u4E8B\u60C5</span>
      val <span class="token operator">=</span> newVal<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="watcher" tabindex="-1">watcher <a class="header-anchor" href="#watcher" aria-hidden="true">#</a></h3><p>emmmm...\u8BF4\u597D\u7684\u8BA2\u9605\u8005\u5462\uFF1F\u522B\u6025\uFF01 \u6211\u4EEC\u6765\u770B\u770B<code>watcher</code>\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">Dep</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>subs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">addSub</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">sub</span><span class="token operator">:</span> Watcher</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u628Awatcher\u653E\u8FDBsubs\u54AF</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>sub<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Dep<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">addDep</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> subs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6267\u884Cwatcher\u4E2D\u7684update()</span>
      subs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">defineReactive</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6211\u662F\u4E00\u4E2A\u65E0\u60C5\u7684\u4F9D\u8D56\u6536\u96C6\u5668</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u62A5\u544A\uFF01\u6570\u636E\u88AB\u8BFB\u53D6\u4E86\uFF01</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Dep.target\u5C31\u662F\u5F53\u524Dwatcher\u5594</span>
        dep<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">set</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal <span class="token operator">===</span> val<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
      dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u62A5\u544A\uFF01\u6570\u636E\u6539\u53D8\u4E86\uFF01\u505A\u4E00\u4E9B\u6570\u636E\u6539\u53D8\u8BE5\u505A\u7684\u4E8B\u60C5</span>
      val <span class="token operator">=</span> newVal<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Watcher</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span> <span class="token literal-property property">expOrFn</span><span class="token operator">:</span> string <span class="token operator">|</span> Function<span class="token punctuation">,</span> <span class="token literal-property property">cb</span><span class="token operator">:</span> Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cb <span class="token operator">=</span> cb<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>expression <span class="token operator">=</span>
      process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&quot;production&quot;</span> <span class="token operator">?</span> expOrFn<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">// parse expression for getter</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> expOrFn <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> expOrFn<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> <span class="token function">parsePath</span><span class="token punctuation">(</span>expOrFn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/**
   * Evaluate the getter, and re-collect dependencies.
   */</span>
  <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">;</span>
    <span class="token comment">// \u901A\u8FC7\u6267\u884Cgetter\u8BFB\u53D6\u6570\u636E\uFF0C\u89E6\u53D1\u54CD\u5E94\u5F0F\u6570\u636E\u7684get\u64CD\u4F5C\uFF0C\u5C06watcher\u52A0\u5165dep\u4E2D</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/**
   * Subscriber interface.
   * Will be called when a dependency changes.
   */</span>
  <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>wow\uFF01\u539F\u6765<code>watcher</code>\u5C31\u662F\u90A3\u4E2A\u8BA2\u9605\u8005\uFF0C\u5C06\u9700\u8981\u4FA6\u542C\u7684\u6570\u636E\u6216\u8005\u8868\u8FBE\u5F0F\u901A\u8FC7<code>this.get()</code>\u89E6\u53D1\u6570\u636E\u4E2D\u7684<code>getter()</code>\uFF0C\u4ECE\u800C\u5C06\u8BA2\u9605\u8005<code>watcher</code>\u52A0\u5165<code>dep</code>\u4E2D\uFF0C\u6570\u636E\u53D8\u52A8\u65F6\uFF0C\u901A\u8FC7<code>dep.notify()</code>\u901A\u77E5\u5230<code>dep</code>\uFF0C\u904D\u5386<code>subs</code>\u6267\u884C<code>watcher.update()</code>\u3002</p><h2 id="watch-computed" tabindex="-1">watch/computed <a class="header-anchor" href="#watch-computed" aria-hidden="true">#</a></h2><p><code>watch</code>\u662F\u4FA6\u542C\u5C5E\u6027\uFF0C\u7528\u4E8E\u89C2\u5BDF\u548C\u54CD\u5E94\u5B9E\u4F8B\u4E0A\u7684\u67D0\u4E2A\u6570\u636E\u53D8\u5316\uFF0C\u800C<code>watcher</code>\u662F<code>watch</code>\u7684\u5E95\u5C42\u5B9E\u73B0\u3002 \u9664\u4E86\u663E\u5F0F\u7684\u5728\u5B9E\u4F8B\u4E2D\u58F0\u660E<code>watch</code>\u6216\u8005\u76F4\u63A5\u4F7F\u7528<code>vm.$watch()</code>\uFF0C\u6BCF\u4E2A\u7EC4\u4EF6\u90FD\u6709\u81EA\u5DF1\u7684<code>renderWatcher</code>\uFF0C<code>computed</code>\u7684\u5B9E\u73B0\uFF0C\u4E5F\u4F9D\u8D56\u4E8E<code>watcher</code>\u3002</p><h3 id="renderwatcher" tabindex="-1">renderWatcher <a class="header-anchor" href="#renderwatcher" aria-hidden="true">#</a></h3><p>\u7EC4\u4EF6<code>data</code>\u4E2D\u7684\u6570\u636E\u53D1\u751F\u53D8\u5316\u65F6\uFF0C\u4F1A\u53CA\u65F6\u66F4\u65B0\u5230\u9875\u9762\uFF0C\u800C\u8BA2\u9605\u8005\u5C31\u662F<code>renderWatcher</code>\u3002 beforeMount --&gt; mounted \u8FC7\u7A0B\u4E2D\uFF0C\u4F1A\u6267\u884C\u5982\u4E0B\u64CD\u4F5C\uFF0C\u6536\u96C6<code>render</code>\u4E2D\u4F1A\u4F7F\u7528\u5230\u7684\u53C2\u6570\uFF0C\u5E76\u8BA2\u9605\u5176\u53D8\u5316\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">updateComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// vm._render\u83B7\u53D6VNode</span>
  vm<span class="token punctuation">.</span><span class="token function">_update</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">_render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> hydrating<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>
  vm<span class="token punctuation">,</span>
  updateComponent<span class="token punctuation">,</span>
  noop<span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function">before</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_isMounted <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>vm<span class="token punctuation">.</span>_isDestroyed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&quot;beforeUpdate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token boolean">true</span> <span class="token comment">/* isRenderWatcher */</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="computedwatcher" tabindex="-1">computedWatcher <a class="header-anchor" href="#computedwatcher" aria-hidden="true">#</a></h3><p>\u524D\u9762\u8BF4\u5230\uFF0C<code>computed</code>\u7684\u5B9E\u73B0\u4E5F\u4F9D\u8D56\u4E8E<code>watcher</code>\u3002</p><ol><li>\u4E3A<code>computed</code>\u4E2D\u58F0\u660E\u7684\u6BCF\u4E2A\u5C5E\u6027<code>new</code>\u4E00\u4E2A<code>watcher</code>\uFF0C\u5176\u4E2D<code>this.lazy = true</code></li><li>\u5C06<code>computed</code>\u4E2D\u58F0\u660E\u7684\u5C5E\u6027\u8F6C\u53D8\u4E3A\u54CD\u5E94\u5F0F\u6570\u636E\uFF0C\u6302\u8F7D\u5728 vm \u4E0A</li><li><code>render</code>\u4E2D\u7B2C\u4E00\u6B21\u8BFB\u53D6<code>computed</code>\u6570\u636E\u65F6\uFF0C\u6267\u884C<code>watcher.evaluate</code>\uFF0C<code>this.dirty = false</code></li><li><code>computed</code>\u4F9D\u8D56\u7684\u6570\u636E\u53D1\u751F\u53D8\u5316\u6267\u884C<code>watcher.update</code>\uFF0C<code>this.dirty = true</code></li><li><code>render</code>\u8BFB\u53D6<code>computed</code>\u6570\u636E\u65F6\uFF0C\u6267\u884C<code>watcher.evaluate</code>\uFF0C<code>this.dirty = false</code>\uFF0C\u5982\u679C<code>computed</code>\u4F9D\u8D56\u7684\u6570\u636E\u672A\u53D1\u751F\u53D8\u5316\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE<code>watcher.value</code>\uFF0C\u5373\u4E0A\u6B21\u7684\u7F13\u5B58\u3002</li></ol><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">initComputed</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span> <span class="token literal-property property">computed</span><span class="token operator">:</span> Object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> watchers <span class="token operator">=</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_computedWatchers <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  watchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> getter <span class="token operator">||</span> noop<span class="token punctuation">,</span> noop<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">lazy</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// component-defined computed properties are already defined on the</span>
  <span class="token comment">// component prototype. We only need to define computed properties defined</span>
  <span class="token comment">// at instantiation here.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">defineComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> userDef<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&quot;production&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">.</span>$data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">The computed property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; is already defined in data.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props <span class="token operator">&amp;&amp;</span> key <span class="token keyword">in</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">The computed property &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; is already defined as a prop.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5982\u679C\u7EC4\u4EF6\u5B9E\u4F8B\u4E2D\u58F0\u660E\u4E86computed\uFF0C\u5219\u5BF9computed\u4E2D\u7684\u5C5E\u6027\u6267\u884CdefineComputed</span>
<span class="token keyword">function</span> <span class="token function">defineComputed</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">target</span><span class="token operator">:</span> any<span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">userDef</span><span class="token operator">:</span> Object <span class="token operator">|</span> Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> shouldCache <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">isServerRendering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> userDef <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sharedPropertyDefinition<span class="token punctuation">.</span>get <span class="token operator">=</span> shouldCache
      <span class="token operator">?</span> <span class="token function">createComputedGetter</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token function">createGetterInvoker</span><span class="token punctuation">(</span>userDef<span class="token punctuation">)</span><span class="token punctuation">;</span>
    sharedPropertyDefinition<span class="token punctuation">.</span>set <span class="token operator">=</span> noop<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    sharedPropertyDefinition<span class="token punctuation">.</span>get <span class="token operator">=</span> userDef<span class="token punctuation">.</span>get
      <span class="token operator">?</span> shouldCache <span class="token operator">&amp;&amp;</span> userDef<span class="token punctuation">.</span>cache <span class="token operator">!==</span> <span class="token boolean">false</span>
        <span class="token operator">?</span> <span class="token function">createComputedGetter</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
        <span class="token operator">:</span> <span class="token function">createGetterInvoker</span><span class="token punctuation">(</span>userDef<span class="token punctuation">.</span>get<span class="token punctuation">)</span>
      <span class="token operator">:</span> noop<span class="token punctuation">;</span>
    sharedPropertyDefinition<span class="token punctuation">.</span>set <span class="token operator">=</span> userDef<span class="token punctuation">.</span>set <span class="token operator">||</span> noop<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> sharedPropertyDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">createComputedGetter</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">computedGetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// computed\u4F9D\u8D56\u7684\u54CD\u5E94\u5F0F\u6570\u636E\u66F4\u65B0\uFF0Cdirty = true\uFF0C\u6267\u884Cevaluate\uFF0C\u5426\u5219\u5219\u76F4\u63A5\u8FD4\u56DE\u4E0A\u6B21\u8BA1\u7B97\u7684\u64CD\u4F5C</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        watcher<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        watcher<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> watcher<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Watcher</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>
    <span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
    <span class="token literal-property property">expOrFn</span><span class="token operator">:</span> string <span class="token operator">|</span> Function<span class="token punctuation">,</span>
    <span class="token literal-property property">cb</span><span class="token operator">:</span> Function<span class="token punctuation">,</span>
    options<span class="token operator">?</span><span class="token operator">:</span> <span class="token operator">?</span>Object<span class="token punctuation">,</span>
    isRenderWatcher<span class="token operator">?</span><span class="token operator">:</span> boolean</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vm <span class="token operator">=</span> vm<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isRenderWatcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      vm<span class="token punctuation">.</span>_watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    vm<span class="token punctuation">.</span>_watchers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// options</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>deep <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>deep<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>user<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>lazy<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>sync <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>sync<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>before <span class="token operator">=</span> options<span class="token punctuation">.</span>before<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>deep <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sync <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cb <span class="token operator">=</span> cb<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy<span class="token punctuation">;</span> <span class="token comment">// for lazy watchers</span>
    <span class="token comment">// parse expression for getter</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> expOrFn <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> expOrFn<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> <span class="token function">parsePath</span><span class="token punctuation">(</span>expOrFn<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>getter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> noop<span class="token punctuation">;</span>
        process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&quot;production&quot;</span> <span class="token operator">&amp;&amp;</span>
          <span class="token function">warn</span><span class="token punctuation">(</span>
            <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Failed watching path: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>expOrFn<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
              <span class="token string">&quot;Watcher only accepts simple dot-delimited paths. &quot;</span> <span class="token operator">+</span>
              <span class="token string">&quot;For full control, use a function instead.&quot;</span><span class="token punctuation">,</span>
            vm
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/**
   * Evaluate the getter, and re-collect dependencies.
   */</span>
  <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">;</span>
    <span class="token comment">// \u901A\u8FC7\u6267\u884Cgetter\u8BFB\u53D6\u6570\u636E\uFF0C\u89E6\u53D1\u54CD\u5E94\u5F0F\u6570\u636E\u7684get\u64CD\u4F5C\uFF0C\u5C06watcher\u52A0\u5165dep\u4E2D</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/**
   * Subscriber interface.
   * Will be called when a dependency changes.
   */</span>
  <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* istanbul ignore else */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">queueWatcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/**
   * Evaluate the value of the watcher.
   * This only gets called for lazy watchers.
   */</span>
  <span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,27),c=[e];function u(l,k,i,r,d,y){return s(),a("div",null,c)}var m=n(o,[["render",u]]);export{w as __pageData,m as default};
